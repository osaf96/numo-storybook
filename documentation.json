{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-23c11020a2831beb3fa02ee911a75b64009c31bb46f73a01145c2560cb13b7f7e641105b678bd8fb01a5a199117001f3da4a78351d29d85d213ed7b82982091f",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\r\n  name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-a5629fc2fe412a5e3a72031a2dd8f8396b8a71e88ac457e3cf736d41d41cc1b6c582daf1e03fcc5fb81508f20d31ecd58918c0df246a4a266492d4c6155bda72",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<app-header></app-header>\n<router-outlet />\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'angular-latest'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { HeaderComponent } from '../stories/components/header/header.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet, HeaderComponent],\r\n  template: `\r\n    <app-header></app-header> \r\n    <router-outlet /> \r\n  `,\r\n  styles: [ ],\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-latest'; \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-3be8a73eeaa336466bee46309fcc7e882634e0e7e72050e699103e97d7a01092ee6ef397cc581811cc1137e486b57718cb64f5eefd81da25c5135b751d6117f9",
            "file": "src/stories/elements/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "\"Button\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 823,
                            "end": 837,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 824,
                                "end": 832,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "\"medium\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 36,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 50,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"numo-button\",\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <button\r\n      type=\"button\"\r\n      (click)=\"onClick.emit($event)\"\r\n      [ngClass]=\"classes\"\r\n      [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n    >\r\n      {{ label }}\r\n    </button>\r\n  `,\r\n})\r\nexport class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: \"small\" | \"medium\" | \"large\" = \"medium\";\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = \"Button\";\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const baseClasses = [\r\n      \"font-sans\",\r\n      \"font-bold\",\r\n      \"rounded-full\",\r\n      \"cursor-pointer\",\r\n      \"inline-block\",\r\n      \"leading-none\",\r\n    ];\r\n\r\n    const mode = this.primary\r\n      ? \"text-white bg-black border-transparent\"\r\n      : \"text-gray-800 bg-transparent border border-gray-300\";\r\n\r\n    const sizeClasses = {\r\n      small: \"text-xs px-4 py-2\",\r\n      medium: \"text-sm px-5 py-2.5\",\r\n      large: \"text-base px-6 py-3\",\r\n    };\r\n\r\n    return [...baseClasses, mode, sizeClasses[this.size]];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 52
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-0411092704abf08639a95aa988a037300deaff3c97d28f214b5bb1c5bcdd053bab377ff3bd0314459f8d1d6b2b88c307d76261c931ef3b0c374325ddf0da5f79",
            "file": "src/stories/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isDropdownOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "isMenuVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MenuComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MenuComponent } from '../menu/menu.component';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  standalone: true,\r\n  imports: [FormsModule, CommonModule, MenuComponent],\r\n  templateUrl: './header.component.html',\r\n  styles: []\r\n})\r\nexport class HeaderComponent {\r\n  isDropdownOpen = false;\r\n  isMenuVisible = false;\r\n  toggleDropdown() {\r\n    this.isDropdownOpen = !this.isDropdownOpen;\r\n  }\r\n\r\n  closeDropdown() {\r\n    this.isDropdownOpen = false;\r\n  }\r\n  toggleMenu() {\r\n    this.isMenuVisible = !this.isMenuVisible;\r\n  }\r\n  closeMenu() {\r\n    this.isMenuVisible = false;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"header flex justify-between items-center p-2.5 bg-gray-100 text-white\">\r\n  <div class=\"logo flex items-center font-bold text-2xl w-10 h-10\"> \r\n      <iconify-icon (click)=\"toggleMenu()\" class=\"icon text-gray-800 cursor-pointer\" icon=\"{{ isMenuVisible ? 'ci:close-md':'cil:hamburger-menu'}}\"></iconify-icon>  \r\n    <img class=\"ml-4\" src=\"assets/logo.png\" alt=\"logo\"/> \r\n  </div>\r\n  <div class=\"search-bar flex justify-center mx-5 flex-1 relative\"> \r\n    <div class=\"searchbar-input flex justify-center w-full max-w-[500px] relative\"> \r\n      <iconify-icon class=\"icon text-gray-800 absolute top-[15px] left-[12px]\" icon=\"il:search\"></iconify-icon> \r\n      <input  type=\"text\"  class=\"w-full text-gray-800 p-2.5 rounded pl-10\"/>\r\n    </div>\r\n  </div>\r\n  <div class=\"user-menu relative inline-block\" (click)=\"toggleDropdown()\" (mouseleave)=\"closeDropdown()\">\r\n    <span class=\"user-name cursor-pointer text-gray-800 relative\"><iconify-icon class=\"bell-icon text-gray-800 absolute top-1.5 left-[-20px]\" icon=\"il:bell\"></iconify-icon>Username</span>\r\n    @if(isDropdownOpen){ \r\n      <div class=\"ropdown hidden absolute right-0 bg-white text-black min-w-[160px] shadow-md z-10\" >\r\n        <a href=\"#profile\" class=\"block px-4 py-3\">Profile</a>\r\n        <a href=\"#settings\" class=\"block px-4 py-3\">Settings</a>\r\n        <a href=\"#logout\" class=\"block px-4 py-3\">Logout</a>\r\n      </div>\r\n    }\r\n  </div>\r\n</div>\r\n@if(isMenuVisible){\r\n  <app-menu   (closeMenuOutput)=\"closeMenu()\"></app-menu>\r\n}"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-b4f1b78a41351735d83d1eb1fd67a7eba5f59ce12418359ea6112be71f87cd6585622a38ef28b7f220b82cdcf91c495bee965ef3b835c85f6e0c44f8e5a05e6e",
            "file": "src/stories/elements/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon",
            "styleUrls": [],
            "styles": [],
            "template": "<iconify-icon icon=\"{{ icon }}\" [ngClass]=\"class\"></iconify-icon>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "'text-gray-800'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core'; \r\n\r\n@Component({\r\n  selector: 'app-icon',\r\n  template: `<iconify-icon icon=\"{{ icon }}\" [ngClass]=\"class\"></iconify-icon>`,\r\n  standalone: true,\r\n  imports: [],\r\n})\r\nexport class IconComponent {\r\n  @Input() icon!: string;\r\n  @Input() class: string = 'text-gray-800';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-3e5b4951e0975a0521b359ab3701944d4e974fe0ac5d5513deabd811e3e6ec99c7196cc6a1e868ee4f18d9d5219d22c93e6cabb41e81a2ad2b13696cd64ca435",
            "file": "src/stories/elements/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "numo-input",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <label\n    for=\"email\"\n    class=\"block text-sm font-medium leading-6 text-gray-900\"\n    >{{ label }}</label\n  >\n  <div class=\"mt-2\">\n    <input\n      type=\"{{ type }}\"\n      name=\"{{ name }}\"\n      id=\"email\"\n      [ngClass]=\"classes\"\n      placeholder=\"{{ placeholder }}\"\n    />\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "\"Email\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "\"email\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "\"you@example.com\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "\"medium\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "\"email\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "\"text\" | \"number\" | \"email\" | \"date\" | \"datetime-local\" | \"month\" | \"password\" | \"tel\" | \"time\" | \"url\" | \"week\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"numo-input\",\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <div>\r\n      <label\r\n        for=\"email\"\r\n        class=\"block text-sm font-medium leading-6 text-gray-900\"\r\n        >{{ label }}</label\r\n      >\r\n      <div class=\"mt-2\">\r\n        <input\r\n          type=\"{{ type }}\"\r\n          name=\"{{ name }}\"\r\n          id=\"email\"\r\n          [ngClass]=\"classes\"\r\n          placeholder=\"{{ placeholder }}\"\r\n        />\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport class InputComponent {\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: \"small\" | \"medium\" | \"large\" = \"medium\";\r\n\r\n  @Input()\r\n  label = \"Email\";\r\n\r\n  @Input()\r\n  name = \"email\";\r\n\r\n  @Input()\r\n  placeholder = \"you@example.com\";\r\n\r\n  @Input()\r\n  type:\r\n    | \"text\"\r\n    | \"number\"\r\n    | \"email\"\r\n    | \"date\"\r\n    | \"datetime-local\"\r\n    | \"month\"\r\n    | \"password\"\r\n    | \"tel\"\r\n    | \"time\"\r\n    | \"url\"\r\n    | \"week\" = \"email\";\r\n\r\n  public get classes(): string[] {\r\n    const baseClasses = [\r\n      \"block w-full rounded-md border-0 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600\",\r\n    ];\r\n\r\n    const sizeClasses = {\r\n      small: \"text-xs px-4 py-2\",\r\n      medium: \"text-sm px-5 py-2.5\",\r\n      large: \"text-base px-6 py-3\",\r\n    };\r\n\r\n    return [...baseClasses, sizeClasses[this.size]];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 57
                    }
                }
            }
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-391719cad3b7b64b8818debac0005885a41898b1a4d3d537b015a7a3a24e5998566a746c35606fc7abf732f3e7a14d2417f8da1c33e926c0132a69d287160264",
            "file": "src/stories/components/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "closeMenuOutput",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "menuItems",
                    "defaultValue": "[...Menu]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "closeMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBackgroundClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMenuClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "redirect",
                    "args": [
                        {
                            "name": "route",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "submenu",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "submenu",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetSubmenuState",
                    "args": [
                        {
                            "name": "submenu",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "submenu",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { Menu } from './menu.model';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  standalone: true,\r\n  imports: [FormsModule, CommonModule, RouterModule],\r\n  templateUrl: './menu.component.html',\r\n  styles: []\r\n})\r\nexport class MenuComponent {\r\n  @Output() closeMenuOutput = new EventEmitter<void>();\r\n\r\n  menuItems = [...Menu];\r\n  constructor(private router: Router) {\r\n\r\n  }\r\n  onMenuClick(event: MouseEvent) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  onBackgroundClick(event: MouseEvent) {\r\n    this.closeMenuOutput.emit();\r\n  }\r\n\r\n  closeMenu() {\r\n    this.closeMenuOutput.emit();\r\n  }\r\n  redirect(route: string, submenu: any, index: number) {\r\n    this.resetSubmenuState(submenu);\r\n    submenu[index].state = 'active';\r\n    this.router.navigate([route]);\r\n  }\r\n\r\n  resetSubmenuState(submenu:any[]) {\r\n    submenu.forEach((items:any) => {\r\n      items.state = 'inactive';\r\n    })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"w-56 relative\">\r\n  <div class=\"w-56 left-0 top-0\">\r\n    <div class=\"w-56 left-0 top-0 rounded-lg shadow border\">\r\n      @for (item of menuItems; track item; let index = $index) {\r\n      <div class=\"w-full py-2 uppercase px-3 \"\r\n        [ngClass]=\"item.state == 'active' ? 'bg-gradient-to-b from-cyan-500 to-sky-600 text-white font-bold': 'border border-b-[1px]'\">\r\n        {{item.name}}\r\n      </div>\r\n\r\n      @for (submenuItem of item.submenu; track submenuItem; let subIndex = $index) {\r\n      <div class=\" py-2 pl-9 pr-3 uppercase cursor-pointer relative\"\r\n        (click)=\"redirect(submenuItem.url,item.submenu, subIndex)\"\r\n        [ngClass]=\"submenuItem.state == 'active' ? 'text-cyan-500 w-full font-bold' : '' \">\r\n        <iconify-icon class=\"absolute top-[50%] -translate-y-1/2 left-3\" icon=\"{{ submenuItem.icon }}\"></iconify-icon>\r\n        {{submenuItem.name}}\r\n      </div>\r\n      }\r\n      }\r\n    </div>\r\n  </div>\r\n</div>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\r\n}"
            },
            {
                "name": "Menu",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/components/menu/menu.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n        name: 'Mans Numo',\r\n        state: 'inactive',\r\n        submenu: []\r\n    },\r\n    {\r\n        name: 'Vadība',\r\n        state: 'inactive',\r\n        submenu: []\r\n    },\r\n    {\r\n        name: ' Pro Numo',\r\n        state: 'active',\r\n        submenu: [\r\n            {\r\n                \"name\": \"Banka\",\r\n                \"icon\": \"cil:bank\",\r\n                \"url\": \"/banka\",\r\n                \"state\": \"active\"\r\n            },\r\n            {\r\n                \"name\": \"Klienti\",\r\n                \"icon\": \"cil:people\",\r\n                \"url\": \"/klienti\",\r\n                \"state\": \"inactive\"\r\n            },\r\n            {\r\n                \"name\": \"Darījumi\",\r\n                \"icon\": \"cil:note-add\",\r\n                \"url\": \"/darījumi\",\r\n                \"state\": \"inactive\"\r\n            },\r\n            {\r\n                \"name\": \"Kredīti\",\r\n                \"icon\": \"cil:note-add\",\r\n                \"url\": \"/kredīti\",\r\n                \"state\": \"inactive\"\r\n            },\r\n            {\r\n                \"name\": \"Statistika\",\r\n                \"icon\": \"cil:chart-line\",\r\n                \"url\": \"/statistika\",\r\n                \"state\": \"inactive\"\r\n            }\r\n        ]\r\n    }\r\n\r\n]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\r\n}"
                }
            ],
            "src/stories/components/menu/menu.model.ts": [
                {
                    "name": "Menu",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/components/menu/menu.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n        name: 'Mans Numo',\r\n        state: 'inactive',\r\n        submenu: []\r\n    },\r\n    {\r\n        name: 'Vadība',\r\n        state: 'inactive',\r\n        submenu: []\r\n    },\r\n    {\r\n        name: ' Pro Numo',\r\n        state: 'active',\r\n        submenu: [\r\n            {\r\n                \"name\": \"Banka\",\r\n                \"icon\": \"cil:bank\",\r\n                \"url\": \"/banka\",\r\n                \"state\": \"active\"\r\n            },\r\n            {\r\n                \"name\": \"Klienti\",\r\n                \"icon\": \"cil:people\",\r\n                \"url\": \"/klienti\",\r\n                \"state\": \"inactive\"\r\n            },\r\n            {\r\n                \"name\": \"Darījumi\",\r\n                \"icon\": \"cil:note-add\",\r\n                \"url\": \"/darījumi\",\r\n                \"state\": \"inactive\"\r\n            },\r\n            {\r\n                \"name\": \"Kredīti\",\r\n                \"icon\": \"cil:note-add\",\r\n                \"url\": \"/kredīti\",\r\n                \"state\": \"inactive\"\r\n            },\r\n            {\r\n                \"name\": \"Statistika\",\r\n                \"icon\": \"cil:chart-line\",\r\n                \"url\": \"/statistika\",\r\n                \"state\": \"inactive\"\r\n            }\r\n        ]\r\n    }\r\n\r\n]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 11,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/stories/components/menu/menu.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Menu",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/elements/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/elements/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/elements/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}